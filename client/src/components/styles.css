/* logo.tsx */
.logo {
  font-weight: 800;
  font-size: 5em;
  display: inline-block;
  text-shadow: 5px 0 0 #808080;
  letter-spacing: -0.2em;
  margin: 0em;
}

/* button.tsx */
.styled-button {
  flex: 1 1;
  background: var(--empty-background-color);
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  border-radius: 1em;
  box-shadow: 3px 3px 6px rgba(0, 0, 0, 0.16);
  padding: 1em;
  font-weight: 600;
  font-size: 1.2em;
}

/* loader.tsx */
.loader {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 4em;
  height: 4em;
  border-radius: 50%;
  border-top: 17px solid var(--dark-background-color);
  background: var(--empty-background-color);
  transform: rotate(180deg);
  transition: 0.1s transform, 0.5s background, 0.5s border, 0.5s border-radius,
    0.5s transform;
}
.loader > * {
  transition: 0.5s transform;
}
.loader:not(.finished) > * {
  transform: scale(0.01);
}

.loader.animated-progress {
  animation: animated-progress 5s infinite;
}
.loader.finished {
  background: var(--primary-2);
  border-radius: 1em;
  border: none;
  transform: rotate(0deg);
}
.loader.finished > * {
  transform: scale(1.5);
}

@keyframes animated-progress {
  0% {
    transform: rotate(180deg);
  }
  25% {
    transform: rotate(220deg);
  }
  50% {
    transform: rotate(180deg);
  }
  75% {
    transform: rotate(140deg);
  }
  100% {
    transform: rotate(180deg);
  }
}

.loader-legacy {
  --border-color: var(--dark-background-color);
  --border-weight: 5px;
  --dash-size: 1px;
  --gap-size: 1px;

  position: relative;
  margin: 60px;
  width: 4em;
  height: 4em;
  background: var(--empty-background-color);
}

.loader-legacy:hover {
  --border-color: #f09;
  --border-weight: 5px;
  --dash-size: 20px;
  --gap-size: 20px;
}

.loader-legacy:after {
  transition: all 0.6s ease;
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, var(--border-color) 100%, transparent 100%)
      top left no-repeat,
    linear-gradient(
        90deg,
        transparent calc(var(--gap-size) / 2),
        var(--border-color) calc(var(--gap-size) / 2),
        var(--border-color) calc(var(--gap-size) / 2 + var(--dash-size)),
        transparent calc(var(--gap-size) / 2 + var(--dash-size))
      )
      top center repeat-x,
    linear-gradient(90deg, var(--border-color) 100%, transparent 100%) top right
      no-repeat,
    linear-gradient(0deg, var(--border-color) 100%, transparent 100%) top left
      no-repeat,
    linear-gradient(
        0deg,
        transparent calc(var(--gap-size) / 2),
        var(--border-color) calc(var(--gap-size) / 2),
        var(--border-color) calc(var(--gap-size) / 2 + var(--dash-size)),
        transparent calc(var(--gap-size) / 2 + var(--dash-size))
      )
      center left repeat-y,
    linear-gradient(0deg, var(--border-color) 100%, transparent 100%) bottom
      left no-repeat,
    linear-gradient(90deg, var(--border-color) 100%, transparent 100%) bottom
      left no-repeat,
    linear-gradient(
        90deg,
        transparent calc(var(--gap-size) / 2),
        var(--border-color) calc(var(--gap-size) / 2),
        var(--border-color) calc(var(--gap-size) / 2 + var(--dash-size)),
        transparent calc(var(--gap-size) / 2 + var(--dash-size))
      )
      bottom center repeat-x,
    linear-gradient(90deg, var(--border-color) 100%, transparent 100%) bottom
      right no-repeat,
    linear-gradient(0deg, var(--border-color) 100%, transparent 100%) top right
      no-repeat,
    linear-gradient(
        0deg,
        transparent calc(var(--gap-size) / 2),
        var(--border-color) calc(var(--gap-size) / 2),
        var(--border-color) calc(var(--gap-size) / 2 + var(--dash-size)),
        transparent calc(var(--gap-size) / 2 + var(--dash-size))
      )
      center right repeat-y,
    linear-gradient(0deg, var(--border-color) 100%, transparent 100%) bottom
      right no-repeat;
  background-size: var(--dash-size) var(--border-weight),
    calc(var(--dash-size) + var(--gap-size)) var(--border-weight),
    var(--dash-size) var(--border-weight), var(--border-weight) var(--dash-size),
    var(--border-weight) calc(var(--dash-size) + var(--gap-size)),
    var(--border-weight) var(--dash-size);
}

/* vivian.box.tsx */

.vivian-box-wrapper {
}
.vivian-box-container {
  padding: 2em 1em 3em 1em;
  position: relative;
  flex: 1;
  max-height: 8em;
  border-radius: 1em;
  margin-bottom: 4em;
}
.vivian-content-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.vivian-content-wrapper > span.text {
  font-weight: 600;
}
.vivian-content-wrapper > .heading {
  font-weight: 800;
}
.vivian-iconic-button {
  position: absolute;
  bottom: 0;
  margin: 0px auto;
  transform: translate(0, 50%);
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
  width: fit-content;
  font-size: 2em;
  padding: 0.5em;
  border-radius: 0.4em;
}

/* transaction_box.css */

.transaction-box {
  flex: 1;
  display: flex;
  margin: 0.5em 0;
  align-items: center;
  padding: 1em;
  border-radius: 1em;
}
.transaction-box .transaction-info {
  flex: 1;
}
.transaction-box .transaction-info > *:first-child {
  font-size: 0.8em;
  font-weight: 500;
  opacity: 0.4;
  text-transform: uppercase;
}
.transaction-box .transaction-info > *:last-child {
  font-size: 1.3em;
  font-weight: 500;
}
.transaction-box .transaction-amount {
  font-weight: 700;
  font-size: 1.2em;
}

/* bottom_sheet.tsx */

.bottom-sheet-container {
  position: fixed;
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
}

.bottom-sheet-background-overlay {
  position: absolute;
  width: 100vw;
  height: 100vh;
  background: white;
  opacity: 0.94;
}

.bottom-sheet {
  flex: 1;
  position: absolute;
  height: fit-content;
  width: 100vw;
  padding: 1em;
  bottom: 0;
  border-radius: 1em;
  box-sizing: border-box;
}
